{
  "version": 3,
  "sources": [
    "assets/machines sync /^/.//.*/.png$",
    "assets/hzd-logo.png",
    "assets/machines/behemoth.png",
    "assets/machines/broadhead.png",
    "assets/machines/charger.png",
    "assets/machines/control-tower.png",
    "assets/machines/corruptor.png",
    "assets/machines/deathbringer.png",
    "assets/machines/fire-bellowback.png",
    "assets/machines/fireclaw.png",
    "assets/machines/freeze-bellowback.png",
    "assets/machines/frostclaw.png",
    "assets/machines/glinthawk.png",
    "assets/machines/grazer.png",
    "assets/machines/lancehorn.png",
    "assets/machines/longleg.png",
    "assets/machines/ravager.png",
    "assets/machines/redeye-watcher.png",
    "assets/machines/rockbreaker.png",
    "assets/machines/sawtooth.png",
    "assets/machines/scorcher.png",
    "assets/machines/scrapper.png",
    "assets/machines/shell-walker.png",
    "assets/machines/snapmaw.png",
    "assets/machines/stalker.png",
    "assets/machines/stormbird.png",
    "assets/machines/strider.png",
    "assets/machines/tallneck.png",
    "assets/machines/test.png",
    "assets/machines/thunderjaw.png",
    "assets/machines/trampler.png",
    "assets/machines/watcher.png",
    "components/Template/Navbar.js",
    "components/Template/Footer.js",
    "components/Template/Layout.js",
    "components/Template/Button.js",
    "components/Home/Home.js",
    "components/Machines/MachineCard.js",
    "components/Machines/Machines.js",
    "components/Admin/Login.js",
    "components/Admin/AdminPanel.js",
    "components/Admin/AddMachine.js",
    "components/Machines/MachineDetails.js",
    "App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "map",
    "webpackContext",
    "req",
    "id",
    "webpackContextResolve",
    "__webpack_require__",
    "o",
    "e",
    "Error",
    "code",
    "keys",
    "Object",
    "resolve",
    "module",
    "exports",
    "Navbar",
    "isHome",
    "useState",
    "isActive",
    "setActive",
    "className",
    "classnames",
    "role",
    "to",
    "onClick",
    "data-target",
    "Footer",
    "href",
    "target",
    "rel",
    "Date",
    "getFullYear",
    "Layout",
    "children",
    "Button",
    "text",
    "link",
    "color",
    "type",
    "require",
    "config",
    "Home",
    "src",
    "hzdLogo",
    "alt",
    "MachineCard",
    "data",
    "index",
    "isAdmin",
    "machineName",
    "name",
    "replace",
    "toLowerCase",
    "key",
    "origin",
    "machine_class",
    "override",
    "Machines",
    "machines",
    "setMachines",
    "searchTerm",
    "setSearchTerm",
    "isLoading",
    "setLoading",
    "filteredMachines",
    "history",
    "useHistory",
    "useEffect",
    "axios",
    "get",
    "process",
    "then",
    "response",
    "filter",
    "machine",
    "search",
    "values",
    "value",
    "toString",
    "includes",
    "push",
    "catch",
    "error",
    "console",
    "log",
    "onChange",
    "event",
    "placeholder",
    "height",
    "width",
    "Login",
    "username",
    "setUsername",
    "password",
    "setPassword",
    "onSubmit",
    "preventDefault",
    "alert",
    "AdminPanel",
    "AddMachine",
    "currentDate",
    "size",
    "machine_sites",
    "weakness",
    "strength",
    "weak_points",
    "explosive_components",
    "created_at",
    "moment",
    "format",
    "updated_at",
    "setValues",
    "handleInputChange",
    "handleSubmit",
    "post",
    "headers",
    "toast",
    "message",
    "duration",
    "dismissible",
    "setTimeout",
    "for",
    "DetailsPanel",
    "labels",
    "label",
    "slice",
    "MachineDetails",
    "match",
    "machineDetails",
    "setMachineDetails",
    "params",
    "machineImage",
    "machineHeaders",
    "machineValues",
    "App",
    "basename",
    "exact",
    "path",
    "component",
    "render",
    "url",
    "Boolean",
    "window",
    "location",
    "hostname",
    "ReactDOM",
    "StrictMode",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.df82193c.chunk.js",
  "sourcesContent": [
    "var map = {\n\t\"./behemoth.png\": 86,\n\t\"./broadhead.png\": 87,\n\t\"./charger.png\": 88,\n\t\"./control-tower.png\": 89,\n\t\"./corruptor.png\": 90,\n\t\"./deathbringer.png\": 91,\n\t\"./fire-bellowback.png\": 92,\n\t\"./fireclaw.png\": 93,\n\t\"./freeze-bellowback.png\": 94,\n\t\"./frostclaw.png\": 95,\n\t\"./glinthawk.png\": 96,\n\t\"./grazer.png\": 97,\n\t\"./lancehorn.png\": 98,\n\t\"./longleg.png\": 99,\n\t\"./ravager.png\": 100,\n\t\"./redeye-watcher.png\": 101,\n\t\"./rockbreaker.png\": 102,\n\t\"./sawtooth.png\": 103,\n\t\"./scorcher.png\": 104,\n\t\"./scrapper.png\": 105,\n\t\"./shell-walker.png\": 106,\n\t\"./snapmaw.png\": 107,\n\t\"./stalker.png\": 108,\n\t\"./stormbird.png\": 109,\n\t\"./strider.png\": 110,\n\t\"./tallneck.png\": 111,\n\t\"./test.png\": 112,\n\t\"./thunderjaw.png\": 113,\n\t\"./trampler.png\": 114,\n\t\"./watcher.png\": 115\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 30;",
    "module.exports = __webpack_public_path__ + \"static/media/hzd-logo.51a04884.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/behemoth.3abed2f1.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/broadhead.8340e2d7.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/charger.877dce0b.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/control-tower.bd1373bf.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/corruptor.f1baa129.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/deathbringer.c322253d.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/fire-bellowback.972a9fa7.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/fireclaw.0103177c.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/freeze-bellowback.832adda2.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/frostclaw.a3607ad3.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/glinthawk.09629b31.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/grazer.ff4da9e1.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/lancehorn.1e8a7fd9.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/longleg.055a3e2e.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/ravager.5b772796.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/redeye-watcher.eaa3c55b.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/rockbreaker.5bec7947.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/sawtooth.4506d1d1.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/scorcher.c5c4cd42.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/scrapper.335c3803.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/shell-walker.ca8ac0ce.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/snapmaw.526d583c.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/stalker.9ebe7717.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/stormbird.c4656a3b.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/strider.390fae55.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/tallneck.848e59fc.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/test.c1f1c11f.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/thunderjaw.dcc9886b.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/trampler.9782c3bc.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/watcher.879985ce.png\";",
    "import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport classnames from \"classnames\"\n\nconst Navbar = ({ isHome }) => {\n  const [isActive, setActive] = useState(false)\n\n  return (\n    <nav\n      className={classnames(\n        \"navbar is-fixed-top is-family-secondary is-spaced is-transparent has-text-centered\",\n        !isHome && \"has-background-primary\"\n      )}\n      role=\"navigation\">\n      <div className=\"navbar-brand\">\n        <Link\n          className=\"navbar-item has-text-weight-bold has-text-white is-size-4\"\n          to=\"/\">\n          HORIZON ZERO DAWN\n        </Link>\n        <div className=\"navbar-burger\" onClick={() => setActive(!isActive)}>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n      <div\n        className={classnames(\"navbar-menu\", isActive === true && \"is-active\")}\n        data-target=\"navbar\">\n        <div id=\"navbar\" className=\"navbar-end is-size-5 has-text-centered\">\n          <Link\n            className=\"navbar-item has-text-white has-text-weight-bold\"\n            to=\"/machines\">\n            Machines\n          </Link>\n          <Link\n            className=\"navbar-item has-text-white has-text-weight-bold\"\n            to=\"/admin/login\">\n            Admin\n          </Link>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n",
    "import React from \"react\"\n\nconst Footer = () => {\n\treturn (\n\t\t<footer className=\"footer has-text-white has-text-centered has-text-weight-bold\">\n\t\t\t<p className=\"is-size-6\">\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"has-text-white mr-2\"\n\t\t\t\t\thref=\"https://bfgonzalez.netlify.app/\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\tBianca Gonzalez\n\t\t\t\t</a>\n\t\t\t\t© {new Date().getFullYear()}\n\t\t\t</p>\n\t\t</footer>\n\t)\n}\n\nexport default Footer\n",
    "import React from \"react\"\nimport Navbar from \"./Navbar\"\nimport Footer from \"./Footer\"\n\nconst Layout = ({ children, isHome }) => {\n\treturn (\n\t\t<div className=\"has-background-primary\">\n\t\t\t<Navbar isHome={isHome} />\n\t\t\t<div className=\"has-navbar-fixed-top\">\n\t\t\t\t<main>{children}</main>\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</div>\n\t)\n}\n\nexport default Layout\n",
    "import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nconst Button = ({ text, link, color, type, onClick }) => {\n\treturn (\n\t\t<div className=\"control\">\n\t\t\t<Link to={link}>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`button is-${color} has-text-weight-bold`}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tonClick={onClick}>\n\t\t\t\t\t{text}\n\t\t\t\t</button>\n\t\t\t</Link>\n\t\t</div>\n\t)\n}\n\nexport default Button\n",
    "import React from \"react\"\n\nimport Layout from \"../Template/Layout\"\nimport Button from \"../Template/Button\"\n\nimport \"../../styles/variables.scss\"\nimport hzdLogo from \"../../assets/hzd-logo.png\"\n\nrequire(\"dotenv\").config()\n\nconst Home = () => {\n\treturn (\n\t\t<Layout isHome>\n\t\t\t<div className=\"hero-section\">\n\t\t\t\t<img src={hzdLogo} alt=\"logo\" />\n\t\t\t\t<div className=\"field is-grouped mt-1 is-hidden-desktop\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttext=\"View Machine Catalogue\"\n\t\t\t\t\t\tcolor=\"black\"\n\t\t\t\t\t\tlink=\"/machines\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport default Home\n",
    "import React from \"react\"\n\nimport Button from \"../Template/Button\"\n\nconst MachineCard = ({ data, index, isAdmin }) => {\n  // regex: replace all spaces with dashes (\"-\")\n  const machineName = data.name.replace(/\\s+/g, \"-\").toLowerCase()\n\n  return (\n    <div className=\"machine-card\">\n      <div className=\"card\" key={index}>\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={require(`../../assets/machines/${machineName}.png`)}\n              alt={`${data.name}`}\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{data.name}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            <p>\n              <strong>Origin:</strong> {data.origin}\n            </p>\n            <p>\n              <strong>Class:</strong> {data.machine_class}\n            </p>\n            <p>\n              <strong>Override:</strong> {data.override}\n            </p>\n          </div>\n\n          {isAdmin && (\n            <div className=\"field is-grouped\">\n              <Button\n                text=\"Edit\"\n                color=\"warning\"\n                link=\"/admin/edit-machine\"\n              />\n              <Button\n                text=\"Delete\"\n                color=\"danger\"\n                link=\"/admin/delete-machine\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MachineCard\n",
    "import React, { useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport Loader from \"react-loader-spinner\"\n\nimport Layout from \"../Template/Layout\"\nimport MachineCard from \"./MachineCard\"\nimport Button from \"../Template/Button\"\n\nconst Machines = ({ isAdmin }) => {\n  const [machines, setMachines] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [isLoading, setLoading] = useState(true)\n  const filteredMachines = []\n\n  const history = useHistory()\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}`)\n      .then((response) => {\n        // remove loading indicator after data has been fetched\n        setLoading(false)\n\n        // on initial page load, or if search bar is empty, display full list of machines\n        if (searchTerm === \"\") {\n          setMachines(response.data)\n        }\n        // if search bar is not empty, filter machines based on input value\n        else {\n          machines.filter((machine) => {\n            let search = searchTerm.toLowerCase()\n            let values = Object.values(machine) // get values of each machine object\n\n            for (let value of values) {\n              if (\n                value !== null &&\n                value.toString().toLowerCase().includes(search)\n              ) {\n                // if any of the values include the search term, push the machine into the filteredMachines array\n                filteredMachines.push(machine)\n                break // break out of the loop as soon as the condition is met the first time\n              }\n            }\n          })\n          setMachines(filteredMachines)\n        }\n      })\n      .catch((error) => console.log(error))\n    // eslint-disable-next-line\n  }, [searchTerm])\n\n  const handleInputChange = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  return (\n    <Layout>\n      <div className=\"machines-section\">\n        <h1 className=\"has-text-white title is-inline\">Machine Catalogue</h1>\n        {isAdmin && (\n          <div className=\"is-pulled-right\">\n            <Button\n              text=\"Add Machine\"\n              color=\"success\"\n              link=\"/admin/add-machine\"\n            />\n          </div>\n        )}\n        <div className=\"field mt-4\">\n          <div className=\"control\">\n            <input\n              className=\"input is-primary\"\n              name=\"search\"\n              type=\"text\"\n              onChange={handleInputChange}\n              value={searchTerm}\n              placeholder=\"Search Machines\"\n            />\n          </div>\n        </div>\n        {isLoading ? (\n          <div className=\"loading-indicator columns is-centered is-mobile is-vcentered\">\n            <Loader type=\"Oval\" color=\"#29cdfb\" height={100} width={100} />\n          </div>\n        ) : (\n          <div className=\"columns is-multiline mt-2\">\n            {machines.map((machine, index) => (\n              <div\n                className=\"column is-one-third\"\n                onClick={() => {\n                  const machineName = machine.name.replace(/\\s+/g, \"-\")\n                  history.push(`/machines/${machineName}`)\n                }}>\n                <MachineCard data={machine} index={index} isAdmin={isAdmin} />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Machines\n",
    "import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\n\nimport Layout from \"../Template/Layout\"\n\nconst Login = () => {\n\tconst [username, setUsername] = useState(\"\")\n\tconst [password, setPassword] = useState(\"\")\n\n\tconst history = useHistory()\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault()\n\t\tif (\n\t\t\tusername === `${process.env.REACT_APP_USERNAME}` &&\n\t\t\tpassword === `${process.env.REACT_APP_PASSWORD}`\n\t\t) {\n\t\t\thistory.push(`${process.env.REACT_APP_ADMIN_URL}`)\n\t\t} else {\n\t\t\talert(\"unauthorized user\")\n\t\t}\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className=\"columns is-centered is-vcentered full-height\">\n\t\t\t\t<div className=\"login-section column is-4 is-10-mobile\">\n\t\t\t\t\t<h1 className=\"title has-text-white\">Login</h1>\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"input is-primary\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\t\t\tonChange={(event) => setUsername(event.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"input is-primary\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={(event) => setPassword(event.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"button is-black has-text-weight-bold\"\n\t\t\t\t\t\t\ttype=\"submit\">\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport default Login\n",
    "import React from 'react';\nimport Machines from '../Machines/Machines';\n\nconst AdminPanel = () => {\n  return (\n    <Machines isAdmin/>\n  )\n}\n\nexport default AdminPanel",
    "import React, { useState } from \"react\"\nimport axios from \"axios\"\nimport moment from \"moment\"\nimport { useHistory } from \"react-router-dom\"\nimport { toast } from \"bulma-toast\"\n\nimport Layout from \"../Template/Layout\"\nimport Button from \"../Template/Button\"\n\nconst AddMachine = () => {\n  const currentDate = new Date()\n  const history = useHistory()\n\n  const [values, setValues] = useState({\n    name: \"\",\n    size: \"\",\n    origin: \"\",\n    override: \"\",\n    machine_class: \"\",\n    machine_sites: 0,\n    weakness: \"\",\n    strength: \"\",\n    weak_points: \"\",\n    explosive_components: \"\",\n    created_at: moment(currentDate).format(\"MM-DD-YYYY\"),\n    updated_at: moment(currentDate).format(\"MM-DD-YYYY\"),\n  })\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    let data = values\n\n    axios\n      .post(process.env.REACT_APP_API_URL, data, {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      })\n      .then((response) => {\n        console.log(response.data)\n        toast({\n          message: `${response.data.name} has been added to the machines database!`,\n          duration: 3000,\n          type: \"is-success\",\n          dismissible: true,\n        })\n        setTimeout(() => {\n          history.push(\"/admin/machines\")\n        }, 1000)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  return (\n    <Layout>\n      <div className=\"add-machine-section\">\n        <h1 className=\"title has-text-white has-text-center\">Add Machine</h1>\n        <form onSubmit={handleSubmit} name=\"addMachinesForm\">\n          <div className=\"field\">\n            <div className=\"control\">\n              <label for=\"name\" className=\"has-text-white\">\n                Name\n              </label>\n              <input\n                className=\"input is-primary\"\n                name=\"name\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={values.name}\n                placeholder=\"Name\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label for=\"size\" className=\"has-text-white\">\n                Size\n              </label>\n              <input\n                className=\"input is-primary\"\n                name=\"size\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={values.size}\n                placeholder=\"Size\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label for=\"origin\" className=\"has-text-white\">\n                Origin\n              </label>\n              <input\n                className=\"input is-primary\"\n                name=\"origin\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={values.origin}\n                placeholder=\"Origin\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label for=\"override\" className=\"has-text-white\">\n                Override\n              </label>\n              <input\n                className=\"input is-primary\"\n                name=\"override\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={values.override}\n                placeholder=\"Override\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label for=\"machine_class\" className=\"has-text-white\">\n                Machine Class\n              </label>\n              <input\n                className=\"input is-primary\"\n                name=\"machine_class\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={values.machine_class}\n                placeholder=\"Machine Class\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label for=\"machine_sites\" className=\"has-text-white\">\n                Machine Sites\n              </label>\n              <input\n                className=\"input is-primary\"\n                name=\"machine_sites\"\n                type=\"number\"\n                onChange={handleInputChange}\n                value={values.machine_sites}\n                placeholder=\"Machine Sites\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label for=\"weakness\" className=\"has-text-white\">\n                Weakness\n              </label>\n              <input\n                className=\"input is-primary\"\n                name=\"weakness\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={values.weakness}\n                placeholder=\"Weakness\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label for=\"strength\" className=\"has-text-white\">\n                Strength\n              </label>\n              <input\n                className=\"input is-primary\"\n                name=\"strength\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={values.strength}\n                placeholder=\"Strength\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label for=\"weak_points\" className=\"has-text-white\">\n                Weak Points\n              </label>\n              <input\n                className=\"input is-primary\"\n                name=\"weak_points\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={values.weak_points}\n                placeholder=\"Weak Points\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label for=\"explosive_components\" className=\"has-text-white\">\n                Explosive Components\n              </label>\n              <input\n                className=\"input is-primary\"\n                name=\"explosive_components\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={values.explosive_components}\n                placeholder=\"Explosive Components\"\n              />\n            </div>\n          </div>\n          <div className=\"field is-grouped mt-5\">\n            <Button text=\"Cancel\" link=\"/admin/machines\" />\n            <button\n              className=\"button is-success has-text-weight-bold\"\n              type=\"submit\"\n              onClick={handleSubmit}>\n              Add Machine\n            </button>\n          </div>\n        </form>\n      </div>\n    </Layout>\n  )\n}\n\nexport default AddMachine\n",
    "import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nimport Layout from \"../Template/Layout\"\n\nconst DetailsPanel = ({ labels, values }) => {\n  return (\n    <div className=\"content has-text-white is-medium\">\n      {labels.map((label, index) => {\n        let value = values.slice(2)[index] // display all values except for id and name\n        if (value === null) value = \"None\" // if value is null, display \"None\" instead of blank\n\n        return (\n          <p key={index}>\n            <strong className=\"has-text-white\">{label}</strong>: {value}\n          </p>\n        )\n      })}\n    </div>\n  )\n}\n\nconst MachineDetails = ({ match }) => {\n  const [machineDetails, setMachineDetails] = useState([])\n\n  const {\n    params: { name },\n  } = match\n\n  // replaces all \"-\" with space (except for Shell-Walker)\n  let machineName = name.replace(/-/g, \" \")\n  if (name === \"Shell-Walker\") machineName = name\n\n  // retain name format (machine-name) but make lower case\n  let machineImage = name.toLowerCase()\n\n  const machineHeaders = [\n    \"Size\",\n    \"Origin\",\n    \"Override\",\n    \"Class\",\n    \"Machine Sites\",\n    \"Weakness\",\n    \"Strength\",\n    \"Weak Points\",\n    \"Explosive Components\",\n  ]\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/filter?name=${machineName}`)\n      .then((response) => {\n        console.log(response.data)\n        setMachineDetails(response.data)\n      })\n  }, [])\n\n  return (\n    <Layout>\n      <div className=\"machine-details-section columns is-centered is-vcentered\">\n        <div className=\"column is-8 is-12-mobile has-text-centered\">\n          <h1 className=\"title has-text-white\">{machineName}</h1>\n          <img\n            src={require(`../../assets/machines/${machineImage}.png`)}\n            alt={`${name}`}\n          />\n        </div>\n        <div className=\"column is-4 has-text-left p-4\">\n          {machineDetails.map((machine) => {\n            let machineValues = Object.values(machine)\n\n            return (\n              <DetailsPanel labels={machineHeaders} values={machineValues} />\n            )\n          })}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default MachineDetails\n",
    "import React from \"react\"\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\n\n// import Layout from './components/Template/Layout';\nimport Home from \"./components/Home/Home\"\nimport Machines from \"./components/Machines/Machines\"\nimport Login from \"./components/Admin/Login\"\nimport AdminPanel from \"./components/Admin/AdminPanel\"\nimport AddMachine from \"./components/Admin/AddMachine\"\nimport MachineDetails from \"./components/Machines/MachineDetails\"\n\nconst App = () => {\n  return (\n    <BrowserRouter basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route\n          path=\"/machines\"\n          render={({ match: { url } }) => (\n            <>\n              <Route path={`${url}`} component={Machines} exact />\n              <Route path={`${url}/:name`} component={MachineDetails} />\n            </>\n          )}\n        />\n        <Route path=\"/hello\" component={MachineDetails} />\n        <Route\n          path=\"/admin\"\n          render={({ match: { url } }) => (\n            <>\n              <Route path={`${url}/login`} component={Login} exact />\n              <Route path={`${url}/machines`} component={AdminPanel} />\n              <Route path={`${url}/add-machine`} component={AddMachine} />\n            </>\n          )}\n        />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n",
    "import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./styles/global.scss\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { StaticRouter } from \"react-router\"\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<StaticRouter basename=\"/\">\n\t\t\t<App />\n\t\t</StaticRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"
  ],
  "sourceRoot": ""
}
